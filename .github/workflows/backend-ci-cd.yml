name: Backend CI/CD

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: Install dependencies
        run: npm ci --prefix backend

      - name: Lint
        run: npm run lint --prefix backend

  prettier:
    name: Prettier
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: Install dependencies
        run: npm ci --prefix backend

      - name: Prettier
        run: npm run prettier --prefix backend

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: Install dependencies
        run: npm ci --prefix backend

      - name: Test
        run: npm test --prefix backend

  build-and-deploy:
    name: Build and Deploy
    needs: [lint, prettier, test]
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: Install dependencies
        run: npm ci --prefix backend

      - name: Build
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/postgres" >> backend/.env
          npm run migrate:latest --prefix backend
          npm run kysely-codegen --prefix backend
          npm run build --prefix backend

      - name: Run Migrations on Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npm run migrate:latest --prefix backend
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Deploy to Render
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: JorgeLNJunior/render-deploy@v1.4.4
        with:
          service_id: ${{ secrets.BACKEND_RENDER_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}
